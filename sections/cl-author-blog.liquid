{% comment %}
  CL Author Blog Grid – simplified & comparison‑safe
  --------------------------------------------------
  Renders an article card when either:
    • article.metafields.blog_post.author.value.id == metaobject.id
    • OR lower‑cased author names match.
  Uses a simple counter (printed) to decide whether to show the fallback.
{% endcomment %}

{{ 'component-article-card.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'section-main-blog.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  @media (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
{% comment %}
  Author Blog Articles Section
  This section displays all blog articles written by the current Author metaobject
{% endcomment %}

{% comment %} Debugging
<div style="background: #f0f0f0; padding: 10px; margin: 10px 0;">
  <p><strong>Debug Info:</strong></p>
  <p>Current metaobject name: "{{ metaobject.name }}"</p>
  <p>Sample article author: "{{ blogs.blog.articles.first.metafields.blog_post.author.value.name }}"</p>
  {% if blogs.blog.articles.first.metafields.blog_post.author.value.name == metaobject.name %}
    <p>They are equal</p>
  {% else %}
    <p>They are not equal</p>
  {% endif %}

  <p><strong>Authors found in first 10 blog articles:</strong></p>
  {% for article in blogs.blog.articles limit: 10 %}
    {% assign author_name = article.metafields.blog_post.author.value.name %}
    <p>"{{ author_name }}" {% if author_name == metaobject.name %}← MATCH!{% endif %}</p>
  {% endfor %}
</div>
{% endcomment %}
<div class="author-articles-section">
  
  {% comment %}
    Display articles from all blogs by the current author
    We're checking: blog, skincare-guides, expert-advice, professionals
  {% endcomment %}
  
  {% assign found_articles = false %}
  
    {% comment %}
    Display articles from all blogs by the current author
    We're checking: blog, skincare-guides, expert-advice, professionals
  {% endcomment %}
  
  {% assign found_articles = false %}
  {% assign displayed_ids = '' %}
  {% assign max_articles = 100 %}
  {% assign articles_per_batch = 9 %}
  {% assign article_count = 0 %}
  
  <div class="main-blog page-width section-{{ section.id }}-padding">
    <h2 class="center title--primary{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      Articles by {{ metaobject.name }}
    </h2>

    <div class="blog-articles {% if section.settings.layout == 'collage' %}blog-articles--collage{% endif %}">
      {% comment %} 
        Perfect chronological sorting approach:
        Create a timeline by repeatedly finding the newest unprocessed article
        Use a string to track already displayed article IDs
      {% endcomment %}
      
      {% for i in (1..max_articles) %}
        {% assign newest_article = null %}
        {% assign newest_date = '' %}
        {% assign newest_blog_name = '' %}
        
        {% comment %} Find newest article from blog {% endcomment %}
        {% for article in blogs.blog.articles %}
          {% if article.metafields.blog_post.author.value.name == metaobject.name %}
            {% unless displayed_ids contains article.id %}
              {% if newest_date == '' or article.published_at > newest_date %}
                {% assign newest_article = article %}
                {% assign newest_date = article.published_at %}
                {% assign newest_blog_name = 'Blog' %}
              {% endif %}
            {% endunless %}
          {% endif %}
        {% endfor %}
        
        {% comment %} Find newest article from skincare-guides {% endcomment %}
        {% for article in blogs.skincare-guides.articles %}
          {% if article.metafields.blog_post.author.value.name == metaobject.name %}
            {% unless displayed_ids contains article.id %}
              {% if newest_date == '' or article.published_at > newest_date %}
                {% assign newest_article = article %}
                {% assign newest_date = article.published_at %}
                {% assign newest_blog_name = 'Skincare Guides' %}
              {% endif %}
            {% endunless %}
          {% endif %}
        {% endfor %}
        
        {% comment %} Find newest article from expert-advice {% endcomment %}
        {% for article in blogs.expert-advice.articles %}
          {% if article.metafields.blog_post.author.value.name == metaobject.name %}
            {% unless displayed_ids contains article.id %}
              {% if newest_date == '' or article.published_at > newest_date %}
                {% assign newest_article = article %}
                {% assign newest_date = article.published_at %}
                {% assign newest_blog_name = 'Expert Advice' %}
              {% endif %}
            {% endunless %}
          {% endif %}
        {% endfor %}
        
        {% comment %} Find newest article from professionals {% endcomment %}
        {% for article in blogs.professionals.articles %}
          {% if article.metafields.blog_post.author.value.name == metaobject.name %}
            {% unless displayed_ids contains article.id %}
              {% if newest_date == '' or article.published_at > newest_date %}
                {% assign newest_article = article %}
                {% assign newest_date = article.published_at %}
                {% assign newest_blog_name = 'Professionals' %}
              {% endif %}
            {% endunless %}
          {% endif %}
        {% endfor %}
        
        {% comment %} If we found an article, display it and mark as processed {% endcomment %}
        {% if newest_article %}
          {% assign found_articles = true %}
          {% assign article_count = article_count | plus: 1 %}
          {% assign displayed_ids = displayed_ids | append: ',' | append: newest_article.id %}
          
          {% comment %} Determine if this article should be initially visible or hidden {% endcomment %}
          {% assign is_initially_visible = false %}
          {% if article_count <= articles_per_batch %}
            {% assign is_initially_visible = true %}
          {% endif %}
          
          <div
            class="blog-articles__article article twcss-pb-8 md:twcss-pb-1{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}{% unless is_initially_visible %} author-articles-hidden{% endunless %}"
            {% if settings.animations_reveal_on_scroll %}
              data-cascade
              style="--animation-order: {{ article_count }};"
            {% endif %}
            data-article-index="{{ article_count }}"
          >
            {%- render 'cl-article-card',
              article: newest_article,
              media_height: section.settings.image_height,
              media_aspect_ratio: newest_article.image.aspect_ratio,
              show_image: section.settings.show_image,
              show_date: section.settings.show_date,
              show_author: section.settings.show_author,
              show_excerpt: true,
              blog_name: newest_blog_name
            -%}
          </div>
        {% else %}
          {% comment %} No more articles found, break the loop {% endcomment %}
          {% break %}
        {% endif %}
      {% endfor %}
    </div>

    {% comment %} Load More Button (only show if there are more than 9 articles) {% endcomment %}
    {% if article_count > articles_per_batch %}
      <div class="author-articles-load-more" style="text-align: center; margin: 2rem 0;">
        <button 
          id="author-articles-load-more-btn" 
          class="btn button button--primary"
          data-articles-per-batch="{{ articles_per_batch }}"
          data-total-articles="{{ article_count }}"
        >
          Load more articles
        </button>
      </div>
    {% endif %}
  </div>

  {% comment %} CSS for hiding articles initially {% endcomment %}
  <style>
    .author-articles-hidden {
      display: none;
    }
    
    .author-articles-load-more {
      transition: opacity 0.3s ease;
    }
    
    .author-articles-load-more.hidden {
      opacity: 0;
      pointer-events: none;
    }
  </style>

  {% comment %} JavaScript for Load More functionality {% endcomment %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const loadMoreBtn = document.getElementById('author-articles-load-more-btn');
      
      if (!loadMoreBtn) return;
      
      const articlesPerBatch = parseInt(loadMoreBtn.getAttribute('data-articles-per-batch'));
      const totalArticles = parseInt(loadMoreBtn.getAttribute('data-total-articles'));
      let currentlyShown = articlesPerBatch;
      
      loadMoreBtn.addEventListener('click', function() {
        // Calculate how many more articles to show
        const nextBatch = Math.min(currentlyShown + articlesPerBatch, totalArticles);
        
        // Show the next batch of articles
        for (let i = currentlyShown + 1; i <= nextBatch; i++) {
          const article = document.querySelector(`[data-article-index="${i}"]`);
          if (article) {
            article.classList.remove('author-articles-hidden');
            
            // Add a small delay for each article for a nice staggered effect
            setTimeout(() => {
              article.style.opacity = '0';
              article.style.transform = 'translateY(20px)';
              article.style.transition = 'opacity 0.4s ease, transform 0.4s ease';
              
              requestAnimationFrame(() => {
                article.style.opacity = '1';
                article.style.transform = 'translateY(0)';
              });
            }, (i - currentlyShown - 1) * 100);
          }
        }
        
        currentlyShown = nextBatch;
        
        // Hide the button if all articles are now shown
        if (currentlyShown >= totalArticles) {
          loadMoreBtn.parentElement.classList.add('hidden');
          
          // Optional: Change button text to indicate completion
          setTimeout(() => {
            loadMoreBtn.parentElement.style.display = 'none';
          }, 300);
        //} else {
          // Update button text to show remaining count
        //  const remaining = totalArticles - currentlyShown;
         // loadMoreBtn.textContent = `Load More Articles (${remaining} remaining)`;
        }
      });
      
      // Initialize button text with count
      //const remaining = totalArticles - currentlyShown;
      //if (remaining > 0) {
       // loadMoreBtn.textContent = `Load More Articles (${remaining} remaining)`;
      //}
    });
  </script>
  
  {% unless found_articles %}
    <p class="no-articles">No articles found for this author.</p>
  {% endunless %}
</div>

{% schema %}
{
  "name": "CL Author Blog Grid",
  "tag": "section",
  "class": "section",
  "settings": [
    {"type":"select","id":"layout","options":[{"value":"grid","label":"Grid"},{"value":"collage","label":"Collage"}],"default":"grid","label":"Layout"},
    {"type":"checkbox","id":"show_image","label":"Show images","default":true},
    {"type":"select","id":"image_height","options":[{"value":"adapt","label":"Adapt"},{"value":"small","label":"Small"},{"value":"medium","label":"Medium"},{"value":"large","label":"Large"}],"default":"medium","label":"Image height"},
    {"type":"checkbox","id":"show_date","label":"Show date","default":true},
    {"type":"checkbox","id":"show_author","label":"Show author","default":false},
    {"type":"range","id":"padding_top","label":"Padding top","min":0,"max":100,"step":4,"unit":"px","default":64},
    {"type":"range","id":"padding_bottom","label":"Padding bottom","min":0,"max":100,"step":4,"unit":"px","default":64}
  ],
  "presets": [ { "name": "CL Author Blog Grid" } ]
}
{% endschema %} 