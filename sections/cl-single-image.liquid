{{ 'section-rich-text.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  {%- if section.settings.image_width_unit == '%'%}
    .section-{{ section.id }} .single-image__img {
      display: block;
      margin-left: auto;
      margin-right: auto;
      width: {{ section.settings.image_width_value }}%;
      max-width: none;
      height: auto;
    }
  {%- else -%}
    .section-{{ section.id }} .single-image__img {
      display: block;
      margin-left: auto;
      margin-right: auto;
      width: 100%;
      max-width: {{ section.settings.image_width_value }}px;
      height: auto;
    }
  {%- endif -%}
{%- endstyle -%}

<div class="isolate{% unless section.settings.full_width %} page-width{% endunless %}" id="{{ section.settings.container_id }}">
  <div class="rich-text content-container gradient{% if section.settings.full_width %} rich-text--full-width content-container--full-width{% endif %} section-{{ section.id }}-padding">
    <div class="rich-text__wrapper {% if section.settings.full_width %} page-width{% endif %}">
      {% if section.settings.image != blank %}
        {%- liquid
          # Build responsive attributes dynamically so the browser picks the right srcset candidate
          if section.settings.image_width_unit == 'px'
            assign chosen_w = section.settings.image_width_value | at_least: 165 | at_most: 4096
            # Generate a widths list that always includes the chosen width plus standard breakpoints
            assign default_widths = '165,360,535,750,1070,1500,2048'
            if chosen_w > 2048
              assign widths_list = default_widths | append: ',' | append: chosen_w
            else
              assign widths_list = default_widths
            endif
            assign sizes_attr = '(min-width: 750px) ' | append: chosen_w | append: 'px, 100vw'
          else
            assign widths_list = '165,360,535,750,1070,1500,2048'
            assign sizes_attr = '100vw'
          endif
        -%}
        {{ section.settings.image | image_tag:
          loading: 'lazy',
          widths: widths_list,
          sizes: sizes_attr,
          class: 'single-image__img',
          alt: section.settings.image.alt | escape }}
      {% endif %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Single Image",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.image-with-text.settings.image.label"
    },
    {
      "type": "number",
      "id": "image_width_value",
      "label": "Image width value",
      "default": 800
    },
    {
      "type": "select",
      "id": "image_width_unit",
      "label": "Width unit",
      "options": [
        {
          "value": "px",
          "label": "px"
        },
        {
          "value": "%",
          "label": "%"
        }
      ],
      "default": "px"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 64
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 64
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": true,
      "label": "t:sections.rich-text.settings.full_width.label"
    },
    {
      "type": "text",
      "id": "container_id",
      "label": "Container ID"
    }
  ],
  "presets": [
    {
      "name": "Single Image"
    }
  ]
}
{% endschema %}